[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Grand Ave, Oakland",
    "section": "",
    "text": "1 Telegraph Ave Crash Data\nDuring 2020-2022, Telegraph Ave, from 19th St to 41st St was re-worked with pedestrians, bicyclists, and bus-riders in mind. This included reducing the number of lanes for cars, adding bulbouts, bike lanes, and bus loading islands. We we first look at the crash data prior to 2020 and how it changed after the changes were made.\nUsing data from the California Crash Reporting System (CCRS)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#injuries-in-oakland-over-time-including-telegraph-by-month",
    "href": "index.html#injuries-in-oakland-over-time-including-telegraph-by-month",
    "title": "Grand Ave, Oakland",
    "section": "1.1 Injuries in Oakland, over time (Including Telegraph), by month",
    "text": "1.1 Injuries in Oakland, over time (Including Telegraph), by month\n\n(-&gt; oakland-city-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :month-year (str (.getYear date-time) \"-\" (.getMonthValue date-time))))))\n    (tc/dataset)\n    (plotly/layer-bar\n     {:=x :month-year\n      :=y :number-injured}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#injuries-on-telegraph-over-time-by-month",
    "href": "index.html#injuries-on-telegraph-over-time-by-month",
    "title": "Grand Ave, Oakland",
    "section": "1.2 Injuries on Telegraph, over time, by month",
    "text": "1.2 Injuries on Telegraph, over time, by month\n\n(-&gt; telegraph-ave-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :month-year (str (.getYear date-time) \"-\" (.getMonthValue date-time))))))\n    (tc/dataset)\n    (plotly/layer-bar\n     {:=x :month-year\n      :=y :number-injured}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#injuries-in-oakland-over-time-by-year",
    "href": "index.html#injuries-in-oakland-over-time-by-year",
    "title": "Grand Ave, Oakland",
    "section": "1.3 Injuries in Oakland, over time, by year",
    "text": "1.3 Injuries in Oakland, over time, by year\n\n(-&gt; oakland-city-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (tc/group-by :year)\n    (tc/aggregate {:number-injured-sum #(reduce + (map (fn [v] (if (nil? v) 0 (Integer. v))) (% :number-injured)))})\n    (plotly/layer-bar\n     {:=x :$group-name\n      :=y :number-injured-sum\n      :=layout {:title \"Number of Injuries Over Years\"\n                :xaxis {:title \"Year\"}\n                :yaxis {:title \"Number of Injuries\"}}}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#injuries-on-telegraph-over-time-by-year",
    "href": "index.html#injuries-on-telegraph-over-time-by-year",
    "title": "Grand Ave, Oakland",
    "section": "1.4 Injuries on Telegraph, over time, by year",
    "text": "1.4 Injuries on Telegraph, over time, by year\n\n(-&gt; telegraph-ave-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (tc/group-by :year)\n    (tc/aggregate {:number-injured-sum #(reduce + (map (fn [v] (if (nil? v) 0 (Integer. v))) (% :number-injured)))})\n    (plotly/layer-bar\n     {:=x :$group-name\n      :=y :number-injured-sum\n      :=layout {:title \"Number of Injuries Over Years\"\n                :xaxis {:title \"Year\"}\n                :yaxis {:title \"Number of Injuries\"}}}))\n\n\nLine chart depicting number of crashes. Oakland is one line and Telegraph is another line\n\n(-&gt; oakland-city-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (tc/group-by [:year])\n    (tc/aggregate {:count tc/row-count})\n    (plotly/layer-line\n     {:=x :year\n      :=y :count\n      :=mark-color \"purple\"}))\n\n\n\n(-&gt; telegraph-ave-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (tc/group-by [:year])\n    (tc/aggregate {:count tc/row-count})\n    (plotly/layer-line\n     {:=x :year\n      :=y :count\n      :=mark-color \"red\"}))\n\n\ncombined data for both oakland and telegraph for crashes\n\n(let [oakland-data (-&gt; oakland-city-crashes\n                       (ds/row-map (fn [row]\n                                     (let [date-time (:crash-date-time row)]\n                                       (assoc row\n                                              :year (str (.getYear date-time))\n                                              :source \"Oakland\"))))\n                       (tc/dataset)\n                       (tc/group-by [:year :source])\n                       (tc/aggregate {:count tc/row-count})\n                       (tc/add-column :normalized-count (fn [ds]\n                                                          (tcc// (:count ds) (float (first (:count ds)))))))\n      telegraph-data (-&gt; telegraph-ave-crashes\n                         (ds/row-map (fn [row]\n                                       (let [date-time (:crash-date-time row)]\n                                         (assoc row\n                                                :year (str (.getYear date-time))\n                                                :source \"Telegraph\"))))\n                         (tc/dataset)\n                         (tc/group-by [:year :source])\n                         (tc/aggregate {:count tc/row-count})\n                         (tc/add-column :normalized-count (fn [ds]\n                                                            (tcc// (:count ds) (float (first (:count ds)))))))\n      combined-data (tc/concat oakland-data telegraph-data)]\n  (plotly/layer-line\n   combined-data\n   {:=x :year\n    :=y :normalized-count\n    :=color :source\n    :=layout {:title \"Number of Crashes Over Years\"\n              :xaxis {:title \"Year\"}\n              :yaxis {:title \"Number of Crashes\"}}}))\n\n\n\n(def oakland-crashes-pedestrian-involved\n  (-&gt; oakland-city-crashes\n      (ds/filter (fn [row]\n                   (not (or (nil? (:pedestrian-action-desc row))\n                            (= \"NO PEDESTRIANS INVOLVED\" (:pedestiran-action-desc row))))))))\n\n\n(def telegraph-crashes-pedestrian-involved\n  (-&gt; telegraph-ave-crashes\n      (ds/filter (fn [row]\n                   (not (or (nil? (:pedestrian-action-desc row))\n                            (= \"NO PEDESTRIANS INVOLVED\" (:pedestiran-action-desc row))))))))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#oakland-crashes-with-pedestrians-involved",
    "href": "index.html#oakland-crashes-with-pedestrians-involved",
    "title": "Grand Ave, Oakland",
    "section": "1.5 Oakland Crashes with pedestrians involved",
    "text": "1.5 Oakland Crashes with pedestrians involved\n\n(-&gt; oakland-crashes-pedestrian-involved\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (plotly/layer-bar\n     {:=x :year\n      :=y :number-injured}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#telegraph-crashes-with-pedestrians-involved",
    "href": "index.html#telegraph-crashes-with-pedestrians-involved",
    "title": "Grand Ave, Oakland",
    "section": "1.6 Telegraph Crashes with pedestrians involved",
    "text": "1.6 Telegraph Crashes with pedestrians involved\n\n(-&gt; telegraph-crashes-pedestrian-involved\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (plotly/layer-bar\n     {:=x :year\n      :=y :number-injured}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#killed-in-oakland-over-time-by-year",
    "href": "index.html#killed-in-oakland-over-time-by-year",
    "title": "Grand Ave, Oakland",
    "section": "1.7 Killed in Oakland, over time, by year",
    "text": "1.7 Killed in Oakland, over time, by year\n\n(-&gt; oakland-city-crashes\n    (ds/row-map (fn [row]\n                   (let [date-time (:crash-date-time row)]\n                     (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (plotly/layer-bar\n     {:=x :year\n       :=y :number-killed}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#killed-on-telegraph-over-time-by-year",
    "href": "index.html#killed-on-telegraph-over-time-by-year",
    "title": "Grand Ave, Oakland",
    "section": "1.8 Killed on Telegraph, over time, by year",
    "text": "1.8 Killed on Telegraph, over time, by year\n\n(-&gt; telegraph-ave-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (plotly/layer-bar\n     {:=x :year\n      :=y :number-killed}))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  },
  {
    "objectID": "index.html#what-drivers-are-crashing-into-over-time-on-telegraph",
    "href": "index.html#what-drivers-are-crashing-into-over-time-on-telegraph",
    "title": "Grand Ave, Oakland",
    "section": "1.9 What drivers are crashing into, over time, on Telegraph",
    "text": "1.9 What drivers are crashing into, over time, on Telegraph\nPlotting what drivers are crashing into, over time\n\n(-&gt; telegraph-ave-crashes\n    (ds/row-map (fn [row]\n                  (let [date-time (:crash-date-time row)]\n                    (assoc row\n                           :year (str (.getYear date-time))))))\n    (tc/dataset)\n    (tc/group-by [:motor-vehicle-involved-with-desc :year ])\n    (tc/aggregate {:count tc/row-count})\n    ((fn [df]\n       (let [years          (distinct (tc/column df :year))\n             other-entities (filter some? (distinct (tc/column df :motor-vehicle-involved-with-desc)))\n             data           (reduce (fn [acc typ]\n                                      (assoc acc (keyword (csk/-&gt;kebab-case typ))\n                                   (map (fn [year]\n                                          (-&gt; df\n                                              (tc/select-rows #(and (= (:year %) year)\n                                                                    (= (:motor-vehicle-involved-with-desc %) typ)))\n                                              (tc/column :count)\n                                              first\n                                              (or 0)))\n                                        years)))\n                                    {:x-axis-data years}\n                          other-entities)]\n         (kind/echarts\n          {:legend {:data (keys (dissoc data :x-axis-data))}\n           :xAxis  {:type \"category\" :data years}\n           :yAxis  {:type \"value\"}\n           :series (map (fn [entity]\n                          {:name entity\n                           :type \"bar\"\n                           :stack \"total\"\n                           :data (get data (keyword (csk/-&gt;kebab-case entity)))})\n                        (keys (dissoc data :x-axis-data)))})))))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Telegraph Ave Crash Data</span>"
    ]
  }
]